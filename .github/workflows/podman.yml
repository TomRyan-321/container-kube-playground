name: actions-jobs
on: 
  workflow_dispatch:
  pull_request:
    branches: [ "main", "master" ]

permissions:
  contents: read
  security-events: write
  actions: read

env:
  FALCON_CLIENT_ID: ${{ secrets.FALCON_CLIENT_ID }} 
  FALCON_CLIENT_SECRET: ${{ secrets.FALCON_CLIENT_SECRET }}
  ECR_REPO: kkuhns
  ECR_TAG: demo

jobs:
  sec-scans:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get changed files
      id: changed-files
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          echo "This is a PR - scanning only changed files"
          
          # Get ALL files changed in this PR (no filtering)
          git diff --name-only origin/${{ github.base_ref }}..HEAD > all_changed_files.txt
          
          # Exclude only .github workflow files (we don't want to scan those)
          grep -v '^\.github/' all_changed_files.txt > changed_files.txt || true
          
          if [ -s changed_files.txt ]; then
            echo "Changed files found (FCS will determine which are IaC):"
            cat changed_files.txt
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "scan_mode=pr_changes" >> $GITHUB_OUTPUT
          else
            echo "No files changed in this PR (excluding workflow files)"
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "scan_mode=pr_changes" >> $GITHUB_OUTPUT
          fi
        else
          echo "Manual trigger - scanning entire repository"
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "scan_mode=full_repo" >> $GITHUB_OUTPUT
        fi

    - name: Create output directory
      run: mkdir -p ./scan-results

    - name: Run FCS IaC Scan
      uses: crowdstrike/fcs-action@v1.1.0
      id: fcs
      if: steps.changed-files.outputs.has_changes == 'true'
      with:
        falcon_client_id: ${{ secrets.FALCON_CLIENT_ID }}
        falcon_region: 'us-1'
        path: '.'
        report_formats: 'sarif'
        output_path: './scan-results'
        fail_on: 'critical=1,high=1'
      env:
        FALCON_CLIENT_SECRET: ${{ secrets.FALCON_CLIENT_SECRET }}

    - name: Check FCS scan results
      if: always() && steps.changed-files.outputs.has_changes == 'true' && github.event_name == 'pull_request'
      run: |
        echo "FCS scan exit code: ${{ steps.fcs.outputs.exit-code }}"
        
        # Simple approach: if exit code is non-zero, the scan failed
        if [ "${{ steps.fcs.outputs.exit-code }}" != "0" ]; then
          echo "::error::FCS scan failed with exit code ${{ steps.fcs.outputs.exit-code }}"
          echo "::error::This indicates critical or high severity security issues were found"
          echo "::error::Check the scan results above for details"
          exit 1
        else
          echo "::notice::FCS scan passed - no critical/high severity issues found"
          echo "PR can proceed"
        fi

    - name: No changes detected
      if: steps.changed-files.outputs.has_changes == 'false'
      run: |
        echo "::notice::No files were changed in this PR (excluding workflow files). Skipping security scan."
        echo "Scan mode: ${{ steps.changed-files.outputs.scan_mode }}"

    - name: Transform SARIF file
      if: always() && steps.changed-files.outputs.has_changes == 'true'
      run: |
        if ls ./scan-results/*-scan-results.sarif 1> /dev/null 2>&1; then
          cp ./scan-results/*-scan-results.sarif original.sarif
          jq '
            .runs[].tool.driver.informationUri = "https://www.crowdstrike.com" |
            .runs[].tool.driver.rules[] |= (
              if .defaultConfiguration.level == "critical" or .defaultConfiguration.level == "high" then .defaultConfiguration.level = "error"
              elif .defaultConfiguration.level == "medium" then .defaultConfiguration.level = "warning"
              elif .defaultConfiguration.level == "low" or .defaultConfiguration.level == "informational" then .defaultConfiguration.level = "note"
              else .defaultConfiguration.level = "warning"
              end
            )
          ' original.sarif > scan-results.sarif
        else
          echo "No SARIF file found to transform"
        fi

    - name: Upload SARIF report to GitHub Code scanning
      uses: github/codeql-action/upload-sarif@v3
      if: always() && hashFiles('scan-results.sarif') != ''
      with:
        sarif_file: scan-results.sarif

    - name: Scan Summary
      if: always()
      run: |
        echo "## IaC Security Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Scan Mode**: ${{ steps.changed-files.outputs.scan_mode }}" >> $GITHUB_STEP_SUMMARY
        echo "- **FCS Exit Code**: ${{ steps.fcs.outputs.exit-code }}" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ github.event_name }}" == "pull_request" ] && [ -f changed_files.txt ]; then
          echo "- **Changed Files (FCS will filter for IaC)**:" >> $GITHUB_STEP_SUMMARY
          while read -r file; do
            echo "  - $file" >> $GITHUB_STEP_SUMMARY
          done < changed_files.txt
        fi
