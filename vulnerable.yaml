---
apiVersion: v1
kind: Namespace
metadata:
  name: app1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: app1
  name: cs-pov-victim
  labels:
    app.kubernetes.io/name: cs-pov-victim
    app.kubernetes.io/part-of: crowdstrike-demo
    app.kubernetes.io/created-by: crowdstrike
spec:
  selector:
    matchLabels:
      run: cs-pov-victim
  replicas: 1
  template:
    metadata:
      labels:
        run: cs-pov-victim
        app.kubernetes.io/name: cs-pov-victim
        app.kubernetes.io/part-of: crowdstrike-demo
        app.kubernetes.io/created-by: crowdstrike
      annotations:
        sensor.falcon-system.crowdstrike.com/injection: enabled
    spec:
      containers:
        - name: app
          image: falconpioupiou/shellshock:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: web
          volumeMounts:
          - mountPath: /run/containerd/containerd.sock
            name: containerd-socket-volume
          securityContext:
            runAsUser: 0
            runAsGroup: 0      

      volumes:
        - name: containerd-socket-volume
          hostPath:
            path: /run/containerd/containerd.sock
            type: ""
---
apiVersion: v1
kind: Service
metadata:
  namespace: app1
  name: cs-pov-victim
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: cs-pov-victim

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: app1
  name: cs-pov-victim
  annotations:
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/inbound-cidrs: 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: cs-pov-victim
              port:
                number: 80
